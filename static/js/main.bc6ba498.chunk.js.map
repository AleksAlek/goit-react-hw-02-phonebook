{"version":3,"sources":["components/AddContactForm/AddContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.jsx","index.js"],"names":["AddContactForm","state","name","number","event","this","setState","target","value","preventDefault","props","contacts","alert","newContact","id","shortid","generate","handleAddContact","onSubmit","handleSubmit","bind","className","type","pattern","title","required","onChange","handleContactData","Component","Filter","filterText","handleFilter","ContactList","handleDelete","filteredContacts","map","contact","toLowerCase","filter","includes","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc6ba498.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport shortid from \"shortid\";\r\n\r\nimport \"./AddContactForm.styles.css\";\r\n\r\nclass AddContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleContactData(event) {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    for (const { name } of this.props.contacts) {\r\n      if (name === this.state.name) {\r\n        alert(`${name} is already in contacts`);\r\n\r\n        return;\r\n      }\r\n    }\r\n\r\n    const newContact = {\r\n      id: shortid.generate(),\r\n      name: this.state.name,\r\n      number: this.state.number,\r\n    };\r\n\r\n    this.props.handleAddContact(newContact);\r\n\r\n    this.setState({ name: \"\", number: \"\" });\r\n  }\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.handleSubmit.bind(this)} className=\"add-form\">\r\n        <label className=\"form-label\">\r\n          Name\r\n          <input\r\n            className=\"form-input\"\r\n            value={name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleContactData.bind(this)}\r\n          />\r\n        </label>\r\n\r\n        <label className=\"form-label\">\r\n          Number\r\n          <input\r\n            className=\"form-input\"\r\n            value={number}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleContactData.bind(this)}\r\n          />\r\n        </label>\r\n\r\n        <button type=\"submit\" className=\"form-btn\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nAddContactForm.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  handleAddContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Filter.styles.css\";\r\n\r\nconst Filter = ({ filterText, handleFilter }) => {\r\n  return (\r\n    <>\r\n      <label className=\"filter-label\">\r\n        Find contacts by name\r\n        <input\r\n          className=\"filter-input\"\r\n          type=\"text\"\r\n          value={filterText}\r\n          onChange={({ target }) => handleFilter(target)}\r\n        />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  filterText: PropTypes.string.isRequired,\r\n  handleFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./ContactList.styles.css\";\r\n\r\nconst ContactList = ({ contacts, filterText, handleDelete }) => {\r\n  const normalizedName = contacts.map((contact) => ({\r\n    ...contact,\r\n    name: contact.name.toLowerCase(),\r\n  }));\r\n\r\n  const filteredContacts = normalizedName.filter(({ name }) =>\r\n    name.includes(filterText)\r\n  );\r\n\r\n  return (\r\n    <ul className=\"contacts-list\">\r\n      {filteredContacts.map(({ id, name, number }) => (\r\n        <li key={id} className=\"contacts-item\">\r\n          <p className=\"contacts-name\">\r\n            {name}: {number}\r\n          </p>\r\n\r\n          <button\r\n            className=\"contacts-btn\"\r\n            type=\"button\"\r\n            onClick={() => handleDelete(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  filterText: PropTypes.string.isRequired,\r\n  handleDelete: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\n\nimport AddContactForm from \"./components/AddContactForm/AddContactForm\";\nimport Filter from \"./components/Filter/Filter\";\nimport ContactList from \"./components/ContactList/ContactList\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: \"\",\n  };\n\n  handleAddContact(newContact) {\n    const { contacts } = this.state;\n\n    this.setState({ contacts: [...contacts, newContact] });\n  }\n\n  handleFilter({ value }) {\n    this.setState({ filter: value });\n  }\n\n  handleDelete(id) {\n    const filteredContacts = this.state.contacts.filter(\n      (contact) => contact.id !== id\n    );\n\n    this.setState({ contacts: filteredContacts });\n  }\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    // Добавлял к функциям .bind(this), иначе падал рендер\n    return (\n      <div className=\"main-container\">\n        <h1>Phonebook</h1>\n        <AddContactForm\n          handleAddContact={this.handleAddContact.bind(this)}\n          contacts={contacts}\n        />\n\n        <h2>Contacts</h2>\n        <Filter\n          filterText={filter}\n          handleFilter={this.handleFilter.bind(this)}\n        />\n        <ContactList\n          contacts={contacts}\n          filterText={filter}\n          handleDelete={this.handleDelete.bind(this)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}